from lab04 import *

def test_example():
    maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze, 4, 4) == True
    assert maze == [
['+', '+', '+', '+', 'G', '+'],
['+', 8, '+', 11, 12, '+'],
['+', 7, 9, 10, '+', '+'],
['+', 6, '+', '+', 2, '+'],
['+', 5, 4, 3, 1, '+'],
['+', '+', '+', '+', '+', '+'] ]


def test_success():
    maze = [
['+','+','+','+','+','+'],
['+','+','+',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+',' ',' ','G','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze, 3, 1) == True
    assert maze == [
['+','+','+','+','+','+'],
['+','+','+', 9, 10,'+'],
['+', 2, 3, 8, 11,'+'],
['+', 1, 4, 7, 12,'+'],
['+','+', 5, 6,'G','+'],
['+','+','+','+','+','+'] ]

    maze2 = [
['+','+','+','+','G','+'],
['+','+','+',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+',' ',' ','+','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze2, 3, 1) == True
    assert maze2 == [
['+','+','+','+','G','+'],
['+','+','+', 9, 10,'+'],
['+', 2, 3, 8,' ','+'],
['+', 1, 4, 7,' ','+'],
['+','+', 5, 6,'+','+'],
['+','+','+','+','+','+'] ]
    
    maze3 = [
['+','+'],
['+',' '],
['+','G']]
    assert solveMaze(maze3, 1, 1) == True
    assert maze3 == [
['+','+'],
['+', 1],
['+','G']]


def test_fail():
    maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ','+',' ','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze, 4, 4) == False
    assert maze == [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+', 2,'+'],
['+',' ',' ','+', 1,'+'],
['+','+','+','+','+','+'] ]

    maze2 = [
['+',' ',' ','+'],
['+',' ','+','G']]
    assert solveMaze(maze2, 0, 1) == False
    assert maze2 == [
['+', 1, 3,'+'],
['+', 2,'+','G']]

    maze3 = [
['+','+','+','+'],
['+',' ',' ','+'],
['+','+','G','+'],
['+',' ','+','+'],
['+',' ',' ','+'],
['+','+','+','+']]
    assert solveMaze(maze3, 4, 1) == False
    assert maze3 == [
['+','+','+','+'],
['+',' ',' ','+'],
['+','+','G','+'],
['+', 2,'+','+'],
['+', 1, 3,'+'],
['+','+','+','+']]
    
